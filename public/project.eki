// Imports
use { Unused1 as U1, Unused2 } from "lib1";
use { Unused2 as U2 } from "lib2";

// Class definition
class User {
    // Method definition
    getName(): string {
        // Method implementation
        return "John Doe";
    }
}

// Variable initialization with inferred type
let sqlcall = SELECT * FROM users;  // Initialize with SQL query result

// fn definition with implicit return type
fn getVal() {
    "foo";  // Return a string directly
}

// Main fn
fn main() {
    // Local variable initialization with inferred type
    let sqlcall = SELECT * FROM users;  // Initialize sqlcall with SQL query result

    const val = "foo";  // Immutable string type

    // Conditional statement
    if val.startsWith("f") {
        print(f"val {val} starts with 'f'"); // val foo starts with 'f'
        print(f"to call {val} we add {{val}}"); // to call foo we add {val}
    }

    for i in 0..9 {
        print(sqlcall[i].getName())
    }
}

// Export statements
export { User, sqlcall };
